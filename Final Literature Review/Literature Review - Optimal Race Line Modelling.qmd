---
title: "Literature Review: Optimal Race Line Modelling"
author: "Joel Thomas Chacko & Sarosh Farhan"
format:
  pdf:
    report: true
    fontsize: 1.2em
    toc: false
    toc-title: '**Contents**'
    css: styles-literature-review.css
    embed-resources: true
    citation-style: numeric
    biblatex: true
    grid:
      body-width: 800px
  revealjs: 
    slide-number: false
    html-math-method: mathjax
    theme: serif

execute: 
  eval: true
  echo: false
  warning: false
  message: false
bibliography: references.bib
---

![](assets/logo.png){fig-align="center"}

## Introduction

Through the course of this project we attempt to understand the impact of different forces on a race car, modelled by a system of equations and thereby we attempt to create an optimal race line for a user drawn race track or predefined F1 race tracks.

## Problem Statement

Racing team benefit greatly in understand the dynamic variables of the race-track like the temperature, friction, slope and many more, additionally also the dynamic variables of the car like the torque, accleration etc. These variables greatly affect the driver's racing line which ensures that the driver completes the lap in the shortest time possible. Therefore, through the course of this project we attempt to model these variables to simulate a optimal race line.

## Literature Review

We attempt to solve the problem of minimum-lap-time and optimal control for a Formula One race car is solved using direct transcription and nonlinear programming [@kapania2016]. The objective is to compute an optimal trajectory, control inputs and setup parameters that together yield the fastest lap, while considering the physical and the dynamic constraints of the car and the track, considering dynamic quantities like friction, temperature etc. This enables the optimization of the racing line, driver controls and the car-specific variables like aerodynamic balance, and suspension stiffness.

Unlike traditional solutions of the race trajectory problem in the form of combined optimal control formulations—where speed, path, and vehicle dynamics are optimized together in computationally demanding nonlinear programming—we adopt a sequential approach [@perantoni2014] [@jain2020] drawing on Kapania et al. The two-stage methodology divides path planning from speed profiling and allows us to calculate dynamically viable racing lines at a fraction of the computational expense.

The first step is to generate a smooth geometric path with least curvature within track boundaries. The second step overimposes a physically correct speed profile along the path, computed using forward-backward integration, constrained to tire friction and acceleration limits of the vehicle. The system enables rapid iteration, flexibility to different tracks, and potential use in real-time autonomous racing solutions or user-interactive simulation software.

### Scope of Improvement

We aim to implement the sequential two-step algorithm for fast generation of vehicle racing trajectories as proposed by Kapania et al. (2015) [@kapania2016], with a novel modification: instead of supplying the model with predefined training and validation datasets, we introduce an interactive component whereby users can provide custom, user-drawn race tracks. The algorithm will then compute optimal racing lines for these previously unseen and variable trajectories. This approach not only serves to rigorously evaluate the generalizability and robustness of the original model but also provides valuable insights into its limitations and areas for further optimization. By decoupling the model from fixed track data and enabling real-time, user-defined input, this work takes a step toward practical applications in autonomous racing and driver-assistance systems. The system can serve as a simulation tool for testing trajectory planning under different car and track configurations, assuming reasonable abstractions of vehicle dynamics and environmental constraints.

## Methodology for the Project

### System Design

![System Design](assets/system-design.png){fig-align="center" width="80%"}

The users draw the custom race line and configure the meta-data of the vehicle and track, and run the simulation. In the background, the physics simulation engine models the optimal track around the user provided meta-data. The simulation is displayed on the screen.

### Application low-fidelity wireframes of user-flow at frontend (tentative, might change as we progress and find design roadblocks)

![Home Screen](assets/Screen1.jpg){fig-align="center" width="80%"}

![User draws a track](assets/Screen2.jpg){fig-align="center" width="80%"}

![User inputs the track parameters and track is adjusted accordingly at UI](assets/Screen3.jpg){fig-align="center" width="80%"}

![User enters car parameters](assets/Screen4.jpg){fig-align="center" width="80%"}

![Once the user hits Simulate button the backend churns out the results and UI is updated with the optimized race line](assets/Screen5.jpg){fig-align="center" width="80%"}

## Conclusion

This review has examined the evolution of optimal race line modelling, highlighting the limitations of traditional nonlinear optimal control methods and the advantages of more efficient sequential approaches like the one proposed by Kapania et al. (2015). By decoupling speed profile computation from trajectory planning, the two-step method offers significant computational benefits, making it a strong candidate for real-time or interactive applications.

Building on this foundation, our proposed work introduces a novel extension: enabling users to draw custom tracks and dynamically simulate optimal racing trajectories. This not only allows for broader validation of the model on previously unseen configurations but also enhances the practical utility of the approach in applications such as autonomous racing, simulation-based driver training, and interactive design tools.

## References
